AC_INIT([MyCpp], [0.1])

PKG_CHECK_MODULES(THIS, [glib-2.0 >= 2.0, gthread-2.0 >= 2.0, libmary-1.0 >= 0.1])
AC_SUBST(THIS_CFLAGS)
AC_SUBST(THIS_LIBS)

AM_INIT_AUTOMAKE([1.7 gnu nostdinc])


# _____________________________ --enable-memprof _______________________________

    AC_ARG_ENABLE([memprof],
		AC_HELP_STRING([--enable-memprof=@<:@yes/no@:>@],
			       [Enable MemProf [default=no]]),
		,
		[enable_memprof="no"])
    AM_CONDITIONAL(ENABLE_MEMPROF, test "x$enable_memprof" = "xyes")
#    AC_DEFUN(ENABLE_MEMPROF)

    if test "x$enable_memprof" = "xyes"; then
	AC_DEFINE([MYCPP_ENABLE_MEMPROF], [1], [ ])
    fi

# ______________________________________________________________________________


AC_PROG_CC
AC_PROG_CXX
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
#LT_INIT(win32-dll)

case "$host" in
  *-*-mingw*|*-*-cygwin*)
    platform_win32=yes
    ;;
  *)
    platform_win32=no
    ;;
esac
AM_CONDITIONAL(PLATFORM_WIN32, test x$platform_win32 = xyes)

AC_ARG_ENABLE([epoll],
	      AC_HELP_STRING([--disable-epoll],
			     [Disable epoll]),
	      [enable_epoll=$enableval],
	      [enable_epoll="yes"])
AM_CONDITIONAL(MYCPP_ENABLE_EPOLL, test "x$enable_epoll" = "xyes")
if test "x$enable_epoll" = "xyes"; then
    AC_DEFINE([MYCPP_ENABLE_EPOLL], [1], [ ])
fi

AC_ARG_WITH([select],
	    AC_HELP_STRING([--with-select=@<:@yes/no@:>@],
			   [Use select() syscall for event polling by default [default=no]]),
	    [with_select=$withval],
	    [with_select="no"])
if test "x$with_select" = "xyes"; then
    AC_DEFINE([MYCPP_USE_SELECT], [1], [ ])
fi

#AC_CONFIG_HEADERS([config.h mycpp/mycpp_config.h config.h])
AC_CONFIG_HEADERS([config.h mycpp/mycpp_config.h])

AC_CONFIG_FILES([Makefile
		 mycpp/Makefile
		 mycpp-1.0.pc])
AC_OUTPUT

